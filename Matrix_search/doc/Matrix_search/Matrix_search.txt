namespace CGAL {
/*!

\mainpage User Manual
\anchor Chapter_Monotone_and_Sorted_Matrix_Search
\anchor chapMatrixSearch

\author Michael Hoffmann

`monotone_matrix_search()` and `sorted_matrix_search()`
are techniques that deal with the problem of efficiently finding
largest entries in matrices with certain structural properties. Many
concrete problems can be modelled as matrix search problems, and for
some of them we provide explicit solutions that allow you to solve
them without knowing about the matrix search technique. Examples are,
the computation of all furthest neighbors for the vertices of a convex
polygon, maximal \f$ k\f$-gons inscribed into a planar point set, and
computing rectangular \f$ p\f$-centers.

\section Matrix_searchExample Example

In the following program we build a random vector \f$ a =
(a_i)_{i = 1,\,\ldots,\,5}\f$ (elements drawn uniformly from \f$ \{
0,\,\ldots,\,99 \}\f$) and construct a %Cartesian matrix \f$ M\f$
containing as elements all sums \f$ a_i + a_j,\: i,\,j \in
\{1,\,\ldots,\,5\}\f$. If \f$ a\f$ is sorted, \f$ M\f$ is sorted as well. So
we can apply `sorted_matrix_search()` to compute the upper bound
for the maximal entry of \f$ a\f$ in \f$ M\f$.

\cgalExample{Matrix_search/sorted_matrix_search.cpp}

*/
} /* namespace CGAL */

/*!
\example Matrix_search/sorted_matrix_search.cpp
*/

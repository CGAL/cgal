------- simple_triangulation_3 -----------------------------------------------

This example shows the incremental construction of a 3D triangulation, 
the location of a point, and how to manipulate elementary operations
on indices in a cell. It uses the default parameters proposed by
CGAL for the Triangulation_3 class.


------- color ------------------------------------------------

This example shows how the user can plug his own vertex base in a
triangulation.

------- adding_handles_3 ---------------------------------------

This example shows how the user can plug his own vertex base
in a triangulation, when he needs to add handles in it.


------- fast_location_3 --------------------------------------------

This example shows the use of the Fast_location policy to speed up
point location queries in a Delaunay triangulation. 

------- segment_traverser_3 --------------------------------------------

This example shows how to use a Triangulation_segment_cell_iterator_3
to traverse the triangulation in a straight line.

------- tds --------------------------------------------------

Shows how to construct a 3D triangulation data structure by 
inserting vertices.


------- find_conflicts_3 ---------------------------------------

Illustrates how the insertion process of points in a Delaunay
triangulation can be decomposed in order to give access to the
cells in conflict (those which would be destroyed by the insertion
of a point) prior to deciding to do the actual insertion or not.


------- linking_2d_and_3d ------------------------------------

Illustrates how to setup a 2D and a 3D triangulation data structure
whose vertices respectively store vertex handles of the other one.


------- regular_3 ----------------------------------------------

Illustrates the use of Regular_triangulation_3.


------- simplex ----------------------------------------------

Illustrates the use of Triangulation_3::Simplex.

observer tests

test all the notification functions, add explanation in the documentation regarding the expected order for the notification function to be called.

traits adaptor tests

create tests for linear traits and spherical arcs (geodesic arcs on sphere)
it is possible to implement a better test for is_between_cw_2_object by testing the booleans that are passed by reference xcv_equal_xcv1 and xcv_equal_xcv2

traits tests

spherical arcs (geodesic arcs on sphere) : test boundaries
conics : test the all the constructors, currently only the constructor that is invoked with the letter i (gets 23 arguments) is tested
bezier : test merge and split functors look at Ron's suggestion

...If those functors were easy to test, I'd say test them.
This is not the case with the Bezier-curve traits-class, and I see no good
way of testing them. I therefore see no gain in testing them.

What would be a good test for Bezier curves is a program that reads sets
of Beizer curves from a file (like Bezier_curves.cpp in the examples folder),
preferably in degenerate positions, and computes their arrangement.
This way Split is tested at any case.

By the way - if you really want to test AreMergeable and Merge, you can do the
following:
1) Construct an arrangement of two intersecting curves C1 and C2, say two
  degree 2 curves (two parabolas):

                        --    C1
                     \ /  \ /
                      +    + p
                     / \  / \
                    /   --   \ C2

2) Each curve should be split into three subcurves.
  Now, remove the two subcurves of C1 that are incident to p
  (using remove_edge()). As a result, the two subcruves of C2 incident to
  p should be merged ...


